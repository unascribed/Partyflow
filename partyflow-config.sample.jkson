/*
 * Welcome to Partyflow! This is a Jankson file... sort of. Jankson is a modification of JSON
 * that allows "quirks", such as:
 * - unquoted keys (when unambiguous)
 * - omitting commas
 * - omitting the root object braces
 * - comments
 * 
 * Partyflow extends Jankson with two new kinds of elements; shell arrays and nest strings.
 * A nest string, delineated with parentheses () and primarily seen in other files than this
 * one, are generally used for JEXL expressions. They're useful as you don't have to escape quotes
 * or other delimiters inside them; the string's ending is unambiguous.
 * 
 * A shell array, delinated with angle brackets <>, is shorthand for an array of strings that
 * has shell-like splitting semantics. For example, the following two are equivalent:
 * [ "foo" "bar" "baz" "this one has spaces" ]
 * <foo bar baz "this one has spaces">
 * 
 * Together, these new string types make working with Partyflow configuration and data files
 * much easier and more intuitive, even if at first they're weird and out-of-place.
 */

// Many of these settings can also be changed in the admin panel.
http: {
	bind: "0.0.0.0"
	port: 3000
	path: "/"
	// Set to /dev/null (even on Windows) to suppress logging
	accessLog: "./access.log"
	// Should be left to true unless you're doing development and are changing templates
	cacheTemplates: true
	// The absolute public URL this instance is accessible at, excluding the root path
	publicUrl: "http://localhost:3000"
}
logger: {
	// TRACE, DEBUG, INFO, WARN, or ERROR
	level: "INFO"
	// true to enable ANSI color support
	color: true
}
database: {
	// The only valid option right now is "h2", which is similar to SQLite
	driver: "h2"
	// .mv.db suffix is added automatically
	file: "./partyflow"
}
security: {
	// Used to secure session cookies. Should be set to something long and random; if null, an
	// appropriate value will be generated for you.
	sessionSecret: null
	// If true, some additional protections will be activated that rely on the site being served
	// over HTTPS. (This has to be done at a reverse proxy; Partyflow itself does not support SSL.)
	https: false
	// N. Scrypt work factor. Higher values are slower, which increases security in the event of a
	// database leak. Exponential; 17 is 2x the work of 16.
	scryptCpu: 16
	// r. Scrypt memory factor. Increases memory usage when hashing passwords. Linear; 17 is 6.25%
	// more work than 16.
	scryptMemory: 16
	// p. Scrypt parallelization factor. Values greater than 1 allow parallelization; Partyflow's
	// scrypt implementation (and in fact, most normal scrypt implementations) do not parallelize,
	// so setting this >1 basically just weakens your hashes. Linear; 1 is 1 core, 2 is 2 cores.
	scryptParallelization: 1
}
storage: {
	// The only valid option right now is "fs" - support for S3, Swift, etc, will be added later
	driver: "fs"
	dir: "./files"
	// If this isn't an absolute URL, it will be resolved relative to http.path
	// If this is an absolute path, it will be resolved relative to the domain
	// {} will be replaced with the file path
	publicUrlPattern: "files/{}"
}
programs: {
	// Separate command arguments must be separate strings. Using some form of sandboxing (e.g.
	// unshare) is recommended in production. All files will be in /tmp/partyflow/work (or whatever
	// your platform's default temp directory is)
	
	// Used to process audio.
	// {} will be replaced with "mpeg" or "probe" depending on which program is needed.
	ffmpeg: <ff{} -hide_banner>
	
	// Used to process images.
	magickConvert: <convert>
	// For newer versions of ImageMagick:
	//magickConvert: <magick convert>
	
	// The maximum number of FFmpeg processes that will be run simultaneously. If set to 0, uses
	// the number of CPU threads.
	maxTranscodes: 0
}
formats: {
	// Specify the path to a formats.jkson to use custom file formats, or null to use the built-ins.
	definitions: null

	// If true, uncompressed formats such as WAV and AIFF will be offered. These are a waste of
	// bandwidth - FLAC is a better choice, but people often expect WAV to be an option. To avoid
	// wasting storage space, WAV and AIFF formats are streamed directly to the client from the FLAC
	// masters.
	allowUncompressedFormats: false
	// If true, lossless formats such as ALAC and FLAC will be offered.
	allowLosslessFormats: true
	// If true, MP3 downloads will be offered.
	// Does not affect streaming formats; 128kbps MP3 will always be offered.
	allowMP3: true
	// If true, proprietary patent-encumbered formats such as AAC will be offered.
	// This option can be DANGEROUS and if you're sufficiently large may result in the MPEG-LA trying
	// to seek rent from you for daring to use their bad formats. Only turn on if you really need
	// it and are willing to accept this risk. Note that your FFmpeg must be built with libfdk_aac
	// support; the native aac encoder is very low quality and therefore unsupported by Partyflow.
	allowEncumberedFormats: false
	
	// Possible values:
	// - none: Do not offer AAC (recommended)
	// - ffmpeg: Use libfdk_aac in ffmpeg (requires a custom build)
	// - fdkaac: Use the fdkaac command-line tool (easiest)
	// - qaac: Use qaac with Apple's CoreAudio in Wine (hardest, best quality)
	aacMode: "none"
	
	// Available in many distros. Just install it. You may need to enable a "contrib" repository,
	// as FDK-AAC is open source but not free software.
	fdkaac: <fdkaac>
	// qaac requires proprietary non-redistributable Apple components, and as such, requires special
	// installation. https://git.sleeping.town/unascribed/Partyflow/wiki/qaac-Installation
	qaac: <env WINEPREFIX=/opt/qaac wine /opt/qaac/x86/qaac.exe>
}

// kate: hl c
// vi: set ft=c
// -*- mode: c -*-